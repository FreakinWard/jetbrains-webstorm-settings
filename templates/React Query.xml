<templateSet group="React Query">
  <template name="rq" value="const cacheKey = &quot;$cacheKey$&quot;;&#10;  const queryObject = {&#10;    queryKey: [cacheKey],&#10;    queryFn: $queryFunction$,&#10;  };&#10;  const { data } = useQuery(queryObject);&#10;  $END$" description="new react query" toReformat="true" toShortenFQNames="true">
    <variable name="cacheKey" expression="decapitalize(regularExpression(fileNameWithoutExtension(), &quot;use*&quot;, &quot;&quot;))" defaultValue="" alwaysStopAt="false" />
    <variable name="queryFunction" expression="decapitalize(regularExpression(fileNameWithoutExtension(), &quot;use*&quot;, &quot;&quot;))" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rhq" value="import { $queryFunction$ } from &quot;../api/$apiEntity$.api&quot;;&#10;import { useQuery } from &quot;react-query&quot;;&#10;&#10;export default function $fileName$() {&#10;  const cacheKey = &quot;$cacheKey$&quot;;&#10;  const queryObject = {&#10;    queryKey: [cacheKey],&#10;    queryFn: $queryFunction$,&#10;  };&#10;  const { data } = useQuery(queryObject);&#10;$END$&#10;  return {&#10;    data,&#10;  };&#10;}" description="Creates new React hook using react-query" toReformat="true" toShortenFQNames="true">
    <variable name="fileName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="apiEntity" expression="cacheKey" defaultValue="" alwaysStopAt="true" />
    <variable name="cacheKey" expression="decapitalize(regularExpression(fileNameWithoutExtension(), &quot;use*&quot;, &quot;&quot;))" defaultValue="" alwaysStopAt="false" />
    <variable name="queryFunction" expression="concat(cacheKey,&quot;Fetch&quot;)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rhqp" value="import { $queryFunction$ } from &quot;../api/$apiEntity$.api&quot;;&#10;import { useQuery } from &quot;react-query&quot;;&#10;&#10;export default function $fileName$({$param$}) {&#10;  const cacheKey = &quot;$cacheKey$&quot;;&#10;  const queryObject = {&#10;    queryKey: [cacheKey, {$param$}],&#10;    queryFn: $queryFunction$,&#10;  };&#10;  const { data } = useQuery(queryObject);&#10;$END$&#10;  return {&#10;    data,&#10;  };&#10;}&#10;" description="Creates new React hook using react-query" toReformat="true" toShortenFQNames="true">
    <variable name="param" expression="&quot;id&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="fileName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="apiEntity" expression="cacheKey" defaultValue="" alwaysStopAt="true" />
    <variable name="cacheKey" expression="decapitalize(regularExpression(fileNameWithoutExtension(), &quot;use*&quot;, &quot;&quot;))" defaultValue="" alwaysStopAt="false" />
    <variable name="queryFunction" expression="concat(cacheKey,&quot;Fetch&quot;)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="ES6_TOP_LEVEL_STATEMENT" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>