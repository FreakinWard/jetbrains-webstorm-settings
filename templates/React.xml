<templateSet group="React">
  <template name="react" value="import React from 'react'" description="imports react" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="prop" value="import * as PropTypes from 'prop-types'" description="imports propTypes" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fcc" value="// @flow&#10;import * as React from 'react';&#10;type Props = {&#10; $END$&#10;};&#10;type State = {&#10; $1$&#10;};&#10;export class $TM_FILENAME_BASE$ extends React.Component&lt;Props, State&gt;{&#10; render() {&#10;  return (&#10;   &lt;div&gt;&#10;    &#10;   &lt;/div&gt;&#10;  );&#10; };&#10;};" description="Creates a React component class with FlowTypes" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="fsc" value="// @flow &#10;import * as React from 'react';&#10;type Props = {&#10; $END$&#10;};&#10;export const $TM_FILENAME_BASE$ = (props: Props) =&gt; {&#10; return (&#10;  &lt;div&gt;&#10;   &#10;  &lt;/div&gt;&#10; );&#10;};" description="Creates a stateless React component with FlowTypes and ES6 module system" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="fsf" value="// @flow&#10;import * as React from 'react';&#10;type Props = {&#10; $END$&#10;};&#10;export function $TM_FILENAME_BASE$(props: Props) {&#10; return (&#10;  &lt;div&gt;&#10;   &#10;  &lt;/div&gt;&#10; );&#10;};" description="Creates a stateless React component as a named function with FlowTypes" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rcp" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;export default function $TM_FILENAME_BASE$({$props$}) {&#10; return (&#10;  &lt;div&gt;&#10; $END$  &#10;  &lt;/div&gt;&#10; );&#10;};&#10;&#10;$TM_FILENAME_BASE$.propTypes = {&#10; $props$: PropTypes.$propType$&#10;};&#10;" description="Creates a stateless React component with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="false" />
    <variable name="props" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="propType" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rh" value="export default function $fileName$() {&#10;    const $methodName$ = ()=&gt; {&#10;        $END$    &#10;    }&#10;&#10;  return {&#10;    $methodName$,&#10;  };&#10;}&#10;" description="Creates a new React hook without http or params" toReformat="false" toShortenFQNames="true">
    <variable name="fileName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="methodName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="hook" value="export default function $NAME$(){&#10;    const $functionName$ = () =&gt; {&#10;        $END$&#10;    };&#10;&#10;    return { $functionName$ };&#10;}&#10;" description="useHook template" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="regularExpression(fileNameWithoutExtension(), &quot;.test&quot;, &quot;&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="functionName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc" value="import React from 'react';&#10;&#10;function $TM_FILENAME_BASE$() {&#10; return (&#10;  $1$&#10; );}&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a stateless React component as a named function without PropTypes" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;&lt;div&gt;&lt;/div&gt;&quot;" alwaysStopAt="true" />
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>